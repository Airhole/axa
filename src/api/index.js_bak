let root = ''
const pro = process.env.NODE_ENV === 'production'
const mocktype = process.env.MOCKTYPE
console.log("============")
console.dir(process.env)

if (!pro) {
  switch (mocktype) {
  case 'local':
    console.warn('本地mock数据模式')
    break
  case 'cross':
    console.warn('远程mock数据模式')
    break
  case 'mixin':
    console.warn('混合mock数据模式')
    break
  }
}

root = pro ? '/api' : '/testapi'
// n false cross  
// n true  local
let path = (inf = null, n = false) => {
  let result = ''
  if (pro) {
    result = root + inf
  } else {
    switch (mocktype) {
    case 'local':
      n = true
      console.warn('接口：' + inf + ' 正在从本地mock数据')
      break
    case 'cross':
      n = false
      console.warn('接口：' + inf + ' 正在从远端mock数据')
      break
    }
    result = n ? (root + '/local' + inf) : (root + '/cross' + inf)
  }
  return result
}
/*
corss  请求远端
local  请求本地mock Json 文件

example:
export const ILOGIN = root + login
*/
let login = '/jdt-web/wx/configdata.do'
let demo = '/demo'
export const ILOGIN = path(login)
// export const ILOGIN = '/testapi/cross/jdt-web/wx/configdata.do'
export const IDEMO = path(demo)

export const ENROLL_INTERSET = path(demo)
export const QUERY_DICT = path(demo)
export const ENROLL_SUBMMIT = path(demo)

// xnApp api 如果需要针对个别API开启mock,可以传入第二个参数为true
export const MAKE_PLAN = path('/plan/createPlan')
//在线投保-读取投保人信息
export const READ_APPLICANT_INFO = path('/insure/customer/loadApplicant')
//在线投保-读取投保人信息
export const READ_INSURED_INFO = path('/insure/customer/loadApplicant')
